{"version":3,"sources":["Components/UI/Card.js","Components/Todo/UserInput.js","Components/Todo/TodoTask.js","Components/Todo/TodoBox.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","classes","className","children","UserInput","useState","userInput","setUserInput","isValid","setIsValid","onSubmit","e","preventDefault","trim","length","taskDetails","id","Math","floor","random","toString","todo","addTask","type","placeholder","onChange","target","value","TodoTask","isComplete","setIsComplete","task","onClick","onRemove","TodoBox","todoItems","todos","map","removeItem","App","taskStorage","JSON","parse","localStorage","getItem","userTask","setUserTask","useEffect","setItem","stringify","prev","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"ySAWeA,EATF,SAACC,GACV,IAAMC,EAAU,QAAUD,EAAME,UAChC,OACI,qBAAKA,UAAWD,EAAhB,SACKD,EAAMG,YCsCJC,G,MAzCG,SAACJ,GACf,MAAkCK,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KA2BA,OACI,uBAAMC,SAjBgB,SAACC,GAEvB,GADAA,EAAEC,iBAC8B,IAA5BN,EAAUO,OAAOC,OAArB,CAKA,IAAMC,EAAc,CAChBC,GAAIC,KAAKC,MAAsB,IAAhBD,KAAKE,UAAiBC,WACrCC,KAAMf,GAEVN,EAAMsB,QAAQP,GACdR,EAAa,SATTE,GAAW,IAcoBP,UAAU,aAA7C,UACI,uBACIA,UAAS,UAAMM,EAAsB,GAAZ,WACzBe,KAAK,OAAOC,YAAY,sBACxBC,SA/Be,SAACd,GACpBA,EAAEe,OAAOC,MAAMd,OAAOC,OAAS,EAC/BL,GAAW,GAGXA,GAAW,GAEfF,EAAaI,EAAEe,OAAOC,QAwBgBA,MAAOrB,IACzC,uBAAOiB,KAAK,SAASI,MAAM,aCZxBC,G,MAtBE,SAAC5B,GACd,MAAoCK,oBAAS,GAA7C,mBAAOwB,EAAP,KAAmBC,EAAnB,KASA,OAEI,eAAC,EAAD,CAAM5B,UAAU,YAAhB,UACI,qBAAIA,UAAS,UAAK2B,EAAa,WAAa,IAA5C,cAAoD7B,EAAM+B,KAAKV,QAC/D,sBAAKnB,UAAU,WAAf,UACI,qBAAKA,UAAU,OAAO8B,QAbR,WAKlBF,GAJCD,IAYG,SAAmD,mBAAG3B,UAAU,mBAChE,qBAAK8B,QAAS,kBAAMhC,EAAMiC,SAASjC,EAAM+B,KAAKf,KAAKd,UAAU,SAA7D,SAAsE,mBAAGA,UAAU,+BCEpFgC,G,MAlBC,SAAClC,GACb,IAAImC,EAUJ,OAPIA,EADyB,IAAxBnC,EAAMoC,MAAMtB,OACA,6DAGDd,EAAMoC,MAAMC,KAAI,SAAAN,GAAI,OAAI,cAAC,EAAD,CAAUE,SAAUjC,EAAMsC,WAA0BP,KAAMA,GAAfA,EAAKf,OAKpF,qBAAKd,UAAU,WAAf,SACKiC,MC2BEI,EAtCH,WACV,IAAMC,EAAcC,KAAKC,MAAMC,aAAaC,QAAQ,UAMpD,EAAgCvC,mBAASmC,GAAe,IAAxD,mBAAOK,EAAP,KAAiBC,EAAjB,KAUA,OAJAC,qBAAU,WACRJ,aAAaK,QAAQ,QAASP,KAAKQ,UAAUJ,OAK7C,sBAAK3C,UAAU,MAAf,UACE,iCACE,+BAAI,mBAAGA,UAAU,2BAAjB,YAEF,cAAC,EAAD,CAAMA,UAAU,YAAhB,SACE,cAAC,EAAD,CAAWoB,QAhBM,SAACS,GACtBe,GAAY,SAAAI,GACV,MAAM,CAAEnB,GAAR,mBAAiBmB,YAgBjB,cAAC,EAAD,CAAMhD,UAAU,YAAhB,SACE,cAAC,EAAD,CAASkC,MAAOS,EAAUP,WAzBN,SAACtB,GACzB8B,GAAY,SAAAI,GACV,OAAOA,EAAKC,QAAO,SAAApB,GAAI,OAAIA,EAAKf,KAAOA,aA0BvC,iCACE,4CAAc,8CAAd,eAAmD,4DCzB5CoC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.710d6c5c.chunk.js","sourcesContent":["import React from 'react'\nimport './Card.css'\nconst Card = (props) => {\n    const classes = \"card \" + props.className\n    return (\n        <div className={classes}>\n            {props.children}\n        </div>\n    )\n}\n\nexport default Card\n","import React, { useState } from 'react';\nimport \"./UserInput.css\"\n\nconst UserInput = (props) => {\n    const [userInput, setUserInput] = useState('')\n    const [isValid, setIsValid] = useState(true)\n    const inputChangeHandler = (e) => {\n        if (e.target.value.trim().length > 0) {\n            setIsValid(true)\n        }\n        else {\n            setIsValid(false)\n        }\n        setUserInput(e.target.value)\n\n    }\n    const taskSubmitHandler = (e) => {\n        e.preventDefault();\n        if (userInput.trim().length === 0) {\n            setIsValid(false);\n            return;\n        }\n\n        const taskDetails = {\n            id: Math.floor(Math.random() * 1000).toString(),\n            todo: userInput\n        }\n        props.addTask(taskDetails);\n        setUserInput('');\n\n    }\n\n    return (\n        <form onSubmit={taskSubmitHandler} className=\"user__form\">\n            <input\n                className={`${!isValid ? 'invalid' : ''}`}\n                type=\"text\" placeholder=\"What to do today..?\"\n                onChange={inputChangeHandler} value={userInput} />\n            <input type=\"submit\" value=\"Add\" />\n        </form>\n\n    )\n}\n\nexport default UserInput\n","import React, { useState } from 'react'\nimport './TodoTask.css'\nimport Card from '../UI/Card'\n\nconst TodoTask = (props) => {\n    const [isComplete, setIsComplete] = useState(false)\n    const onCompleteHandler = () => {\n        if (!isComplete) {\n            setIsComplete(true)\n        }\n        else {\n            setIsComplete(false)\n        }\n    }\n    return (\n\n        <Card className=\"todo_item\">\n            <h3 className={`${isComplete ? 'complete' : ''}`}> {props.task.todo}</h3>\n            <div className=\"task_btn\">\n                <div className=\"done\" onClick={onCompleteHandler} ><i className=\"fas fa-check\"></i></div>\n                <div onClick={() => props.onRemove(props.task.id)} className=\"delete\"><i className=\"fas fa-trash-alt\"></i></div>\n            </div>\n        </Card>\n    )\n}\n\nexport default TodoTask\n","import React from 'react';\nimport TodoTask from './TodoTask';\nimport './TodoBox.css'\n\nconst TodoBox = (props) => {\n    let todoItems;\n\n    if ((props.todos.length) === 0) {\n        todoItems = (<h4> \"You didn't add any Task\"</h4>)\n    }\n    else {\n        todoItems = props.todos.map(task => <TodoTask onRemove={props.removeItem} key={task.id} task={task} />)\n    }\n\n\n    return (\n        <div className=\"todo_box\">\n            {todoItems}\n        </div>\n    )\n}\n\nexport default TodoBox\n","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Card from './Components/UI/Card';\nimport UserInput from './Components/Todo/UserInput';\nimport TodoBox from './Components/Todo/TodoBox';\n\nconst App = () => {\n  const taskStorage = JSON.parse(localStorage.getItem('tasks'));\n  const deleteItemHandler = (id) => {\n    setUserTask(prev => {\n      return prev.filter(task => task.id !== id)\n    })\n  }\n  const [userTask, setUserTask] = useState(taskStorage || []);\n  const addTaskHandler = (task) => {\n    setUserTask(prev => {\n      return [task, ...prev]\n    })\n  }\n  useEffect(() => {\n    localStorage.setItem('tasks', JSON.stringify(userTask))\n  })\n\n  return (\n\n    <div className=\"app\">\n      <header>\n        <h1><i className=\"fas fa-clipboard-check\"></i>ToDo</h1>\n      </header>\n      <Card className=\"user_form\">\n        <UserInput addTask={addTaskHandler} />\n      </Card>\n      <Card className=\"todo_list\">\n        <TodoBox todos={userTask} removeItem={deleteItemHandler} />\n      </Card>\n\n      <footer>\n        <p>Powered by <strong> ReactJS</strong>,Created by <strong>Mubsshir Khan</strong></p>\n      </footer>\n    </div>\n\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}